rules_version = '2'

service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow get, write: if canAccess();

      function canAccess() {
        return request.auth != null && request.auth.uid == userId;
      }

      match /tasks/{taskId} {
        allow delete, read: if canAccess();
        allow update: if canAccess() && canUpdate(request.resource.data);
        allow create: if canAccess() && canCreate(request.resource.data);

        function canCreate(data) {
          return data.keys().hasAll(['title', 'description', 'completed', 'creationTime']) &&
            data.title is string && 
            data.description is string &&
            data.completed is bool &&
            data.creationTime == request.time;
        }

        function canUpdate(data) {
          return data.diff(resource.data).affectedKeys().hasOnly(['title', 'description', 'completed', 'lastUpdateTime']) &&
            data.get('title', '') is string &&
            data.get('description', '') is string &&
            data.get('completed', true) is bool &&
            data.lastUpdateTime == request.time;
        }
      }
    }
  }
}
